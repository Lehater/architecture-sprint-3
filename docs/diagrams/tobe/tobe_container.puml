@startuml
!include ../_c4/C4_Component.puml

title Диаграмма Контейнеров системы умного дома

!unquoted procedure Rel_Write($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
$getRel("--[#green]>>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!endprocedure

!unquoted procedure Rel_Read($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
$getRel("<<--[#blue]", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
!endprocedure

Person(user, "Пользователь", "Управляет умным домом через веб интерфейс")
System_Ext(sensor, "Оборудование Умного Дома", "Отправляет данные телеметрии и принимает команды")

Enterprise_Boundary(smart-house_company,"Smart House Company") {
    Boundary(smart-house_service,"Smart-House Service") {
        Container(api_gateway, "API Gateway", "Единая точка входа для всех запросов")
        Container(device_service, "Device Management Service", "Управление устройствами: регистрация, команды, статус")
        Container(telemetry_service, "Telemetry and Monitoring Service", "Прием данных телеметрии через Kafka, хранение, мониторинг")
        Container(automation_service, "Automation Service", "Создание и выполнение сценариев автоматизации")
        Container(devices_connector, "Devices Connector", "Взаимодействие с устройствами")
        Container(message_queue, "Kafka", "Шина данных для обмена сообщениями")
    }
    Container(user_interaction, "Smart House Web Site", "Пользовательский интерфейс для управления умным домом")
}

Rel(user, user_interaction, "Управляет устройствами, просмотр телеметрии")
Rel(user_interaction, api_gateway, "Отправка запросов на управление устройствами")

' Маршрутизация запросов через API Gateway
Rel(api_gateway, device_service, "Регистрация, команды и управление устройствами")
Rel(api_gateway, telemetry_service, "Запрос данных телеметрии")
Rel(api_gateway, automation_service, "Создание и управление сценариями")

' Взаимодействие с шиной сообщений Kafka для асинхронного обмена данными
Rel_Write(device_service, message_queue, "Публикация команд")
Rel_Read(device_service, message_queue, "Результаты команд")
Rel_Write(device_service, message_queue, "Публикация телеметрии")
Rel_Write(devices_connector, message_queue, "Публикация телеметрии")
Rel_Write(automation_service, message_queue, "Публикация команд")

Rel_Read(devices_connector, message_queue, "Команды на устройства")
Rel_Write(devices_connector, message_queue, "Результаты команд")
Rel(devices_connector, sensor, "Команды на устройства через различные протоколы")

Rel_Read(telemetry_service, message_queue, "Получение телеметрии")
Rel_Read(automation_service, message_queue, "Результаты команд")
Rel_Read(automation_service, message_queue, "Телеметрия")

'
Rel(sensor, devices_connector, "Приём телеметрии через протоколы (например, MQTT, HTTP)")

@enduml
